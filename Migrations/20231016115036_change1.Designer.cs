// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Viscon_ProjectC_Groep4;

#nullable disable

namespace Viscon_ProjectC_Groep4.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231016115036_change1")]
    partial class change1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("public")
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Entities.Departments", b =>
                {
                    b.Property<int>("Dep_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Dep_Id"));

                    b.Property<string>("Dep_Speciality")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Dep_Id");

                    b.ToTable("Departments", "public");
                });

            modelBuilder.Entity("Entities.Machines", b =>
                {
                    b.Property<int>("Mach_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Mach_Id"));

                    b.Property<string>("Mach_Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Mach_Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Mach_Id");

                    b.ToTable("Machines", "public");
                });

            modelBuilder.Entity("Entities.Messages", b =>
                {
                    b.Property<int>("Msg_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Msg_Id"));

                    b.Property<int>("Message_Sender")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Msg_Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Msg_Message")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Msg_Id");

                    b.ToTable("Messages", "public");
                });

            modelBuilder.Entity("Entities.Tickets", b =>
                {
                    b.Property<int>("Tick_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Tick_Id"));

                    b.Property<int>("Tick_Creator_UserId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Tick_DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Tick_DepartmentId")
                        .HasColumnType("integer");

                    b.Property<string>("Tick_Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Tick_ExpectedToBeDone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Tick_Helper_UserId")
                        .HasColumnType("integer");

                    b.Property<int>("Tick_MachId")
                        .HasColumnType("integer");

                    b.Property<string>("Tick_MadeAnyChanges")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Tick_Media")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Tick_MessageId")
                        .HasColumnType("integer");

                    b.Property<int>("Tick_Priority")
                        .HasColumnType("integer");

                    b.Property<bool>("Tick_Resolved")
                        .HasColumnType("boolean");

                    b.Property<string>("Tick_Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Tick_Id");

                    b.HasIndex("Tick_Creator_UserId");

                    b.HasIndex("Tick_DepartmentId");

                    b.HasIndex("Tick_Helper_UserId");

                    b.HasIndex("Tick_MachId");

                    b.HasIndex("Tick_MessageId");

                    b.ToTable("Tickets", "public");
                });

            modelBuilder.Entity("Entities.Users", b =>
                {
                    b.Property<int>("Usr_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Usr_Id"));

                    b.Property<int>("Usr_DepId")
                        .HasColumnType("integer");

                    b.Property<string>("Usr_Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Usr_FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Usr_LanguagePreference")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Usr_LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Usr_Level")
                        .HasColumnType("integer");

                    b.Property<byte[]>("Usr_PasswSalt")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<byte[]>("Usr_Password")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<int>("Usr_PhoneNumber")
                        .HasColumnType("integer");

                    b.Property<string>("Usr_Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Usr_Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Usr_Id");

                    b.HasIndex("Usr_DepId");

                    b.ToTable("Users", "public");
                });

            modelBuilder.Entity("Entities.Tickets", b =>
                {
                    b.HasOne("Entities.Users", "Creator")
                        .WithMany()
                        .HasForeignKey("Tick_Creator_UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Departments", "Departments")
                        .WithMany()
                        .HasForeignKey("Tick_DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Users", "Helper")
                        .WithMany()
                        .HasForeignKey("Tick_Helper_UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Machines", "Machines")
                        .WithMany()
                        .HasForeignKey("Tick_MachId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Messages", "Messages")
                        .WithMany()
                        .HasForeignKey("Tick_MessageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creator");

                    b.Navigation("Departments");

                    b.Navigation("Helper");

                    b.Navigation("Machines");

                    b.Navigation("Messages");
                });

            modelBuilder.Entity("Entities.Users", b =>
                {
                    b.HasOne("Entities.Departments", "Departments")
                        .WithMany()
                        .HasForeignKey("Usr_DepId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departments");
                });
#pragma warning restore 612, 618
        }
    }
}
